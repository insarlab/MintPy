## auto value for smallbaselineApp.cfg
########## Load Data (--load to exit after this step)
mintpy.load.processor    = isce
mintpy.load.updateMode   = yes
mintpy.load.compression  = no
##-------subset (optional, --subset to exit after this step)
mintpy.subset.yx         = no
mintpy.subset.lalo       = no

########## Modify network
## Coherence-based
mintpy.network.coherenceBased    = no
mintpy.network.keepMinSpanTree   = yes
mintpy.network.minCoherence      = 0.7
mintpy.network.maskFile          = waterMask.h5
mintpy.network.aoiYX             = no
mintpy.network.aoiLALO           = no
## temp/perp baseline, dates
mintpy.network.tempBaseMax       = no
mintpy.network.perpBaseMax       = no
mintpy.network.connNumMax        = no
mintpy.network.startDate         = no
mintpy.network.endDate           = no
mintpy.network.excludeDate       = no
mintpy.network.excludeIfgIndex   = no
mintpy.network.referenceFile     = no


########## Reference in Space
mintpy.reference.yx              = no
mintpy.reference.lalo            = no
mintpy.reference.maskFile        = maskConnComp.h5
mintpy.reference.coherenceFile   = avgSpatialCoh.h5
mintpy.reference.minCoherence    = 0.85


########## Unwrapping Error Correction
mintpy.unwrapError.method            = no
mintpy.unwrapError.ramp              = no
mintpy.unwrapError.waterMaskFile     = waterMask.h5
mintpy.unwrapError.bridgePtsRadius   = 50


########## Network Inversion
mintpy.networkInversion.weightFunc       = var
mintpy.networkInversion.maskDataset      = no
mintpy.networkInversion.maskThreshold    = 0.4
mintpy.networkInversion.minRedundancy    = 1.0
mintpy.networkInversion.waterMaskFile    = waterMask.h5
mintpy.networkInversion.minNormVelocity  = yes
mintpy.networkInversion.residualNorm     = L2

mintpy.networkInversion.minTempCoh       = 0.7
mintpy.networkInversion.minNumPixel      = 100
mintpy.networkInversion.shadowMask       = yes

mintpy.networkInversion.parallel         = no
mintpy.networkInversion.cluster          = slurm
mintpy.networkInversion.config           = no
mintpy.networkInversion.numWorker        = 40
mintpy.networkInversion.walltime         = 00:40


########## Tropospheric Delay Correction
mintpy.troposphericDelay.method          = pyaps
mintpy.troposphericDelay.weatherModel    = ERA5
mintpy.troposphericDelay.weatherDir      = ${WEATHER_DIR}
mintpy.troposphericDelay.polyOrder       = 1
mintpy.troposphericDelay.looks           = 8
mintpy.troposphericDelay.minCorrelation  = 0

########## Phase Ramp Removal
mintpy.deramp            = no
mintpy.deramp.maskFile   = maskTempCoh.h5


########## Topographic (DEM) Residual Correction
mintpy.topographicResidual                    = yes
mintpy.topographicResidual.polyOrder          = 2
mintpy.topographicResidual.phaseVelocity      = no
mintpy.topographicResidual.stepFuncDate       = no
mintpy.topographicResidual.excludeDate        = exclude_date.txt
mintpy.topographicResidual.pixelwiseGeometry  = yes

########## Phase Residual for Noise Evaluation
## Phase Residual Root Mean Square
mintpy.residualRMS.maskFile  = maskTempCoh.h5
mintpy.residualRMS.deramp    = quadratic
mintpy.residualRMS.cutoff    = 3

## Reference in Time
mintpy.reference.date    = reference_date.txt


########## Velocity Inversion
mintpy.velocity.excludeDate  = exclude_date.txt
mintpy.velocity.startDate    = no
mintpy.velocity.endDate      = no


########## Post-processing (geocode, output to Google Earth, HDF-EOS5, etc.)
mintpy.geocode               = yes
mintpy.geocode.SNWE          = no
mintpy.geocode.latStep       = no
mintpy.geocode.lonStep       = no
mintpy.geocode.interpMethod  = nearest
mintpy.geocode.fillValue     = np.nan

## Export to other formats
mintpy.save.kmz              = yes
mintpy.save.hdfEos5          = no
mintpy.save.hdfEos5.update   = no
mintpy.save.hdfEos5.subset   = no

## Plot
mintpy.plot  = yes

